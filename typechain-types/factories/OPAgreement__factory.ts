/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OPAgreement, OPAgreementInterface } from "../OPAgreement";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_OPToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OPToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isInAgreement",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensToStake",
        type: "uint256",
      },
    ],
    name: "makeAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "remainingBalance",
        type: "uint256",
      },
    ],
    name: "validateAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161051538038061051583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610482806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632dfdd244146100675780633ae732591461009757806375ba5bb3146100ae578063a5b39cfb146100e1578063b3da119714610101578063df86d50714610116575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a060035481565b60405190815260200161008e565b6100d16100bc366004610389565b60016020526000908152604090205460ff1681565b604051901515815260200161008e565b6100a06100ef366004610389565b60026020526000908152604090205481565b61011461010f3660046103d5565b610129565b005b6101146101243660046103ab565b61028f565b600080546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561016d57600080fd5b505afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a591906103ee565b9050818110156101fc5760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f75676820746f6b656e7320746f207374616b6500000000000060448201526064015b60405180910390fd5b3360009081526001602052604090205460ff161561024d5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481cdd185ad95960921b60448201526064016101f3565b336000908152600160208181526040808420805460ff191690931790925560029052812083905560038054849290610286908490610407565b90915550505050565b6000546001600160a01b031633146102f95760405162461bcd60e51b815260206004820152602760248201527f6f6e6c79204f5020636f6e74726163742063616e2063616c6c207468697320666044820152663ab731ba34b7b760c91b60648201526084016101f3565b6001600160a01b0382166000908152600260205260409020548110156103225761032282610326565b5050565b6001600160a01b0381166000908152600260208181526040808420805460018452918520805460ff191690559290915290829055600380549192839261028690849061041f565b80356001600160a01b038116811461038457600080fd5b919050565b60006020828403121561039b57600080fd5b6103a48261036d565b9392505050565b600080604083850312156103be57600080fd5b6103c78361036d565b946020939093013593505050565b6000602082840312156103e757600080fd5b5035919050565b60006020828403121561040057600080fd5b5051919050565b6000821982111561041a5761041a610436565b500190565b60008282101561043157610431610436565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f582b6ececb874c245f25ccba5cc893bfb472d1dfd8883c0a45b6b7c98ecd1c864736f6c63430008070033";

type OPAgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OPAgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OPAgreement__factory extends ContractFactory {
  constructor(...args: OPAgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OPAgreement";
  }

  deploy(
    _OPToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OPAgreement> {
    return super.deploy(_OPToken, overrides || {}) as Promise<OPAgreement>;
  }
  getDeployTransaction(
    _OPToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_OPToken, overrides || {});
  }
  attach(address: string): OPAgreement {
    return super.attach(address) as OPAgreement;
  }
  connect(signer: Signer): OPAgreement__factory {
    return super.connect(signer) as OPAgreement__factory;
  }
  static readonly contractName: "OPAgreement";
  public readonly contractName: "OPAgreement";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OPAgreementInterface {
    return new utils.Interface(_abi) as OPAgreementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OPAgreement {
    return new Contract(address, _abi, signerOrProvider) as OPAgreement;
  }
}
