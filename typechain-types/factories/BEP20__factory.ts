/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BEP20, BEP20Interface } from "../BEP20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600481526020017f55534454000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5553440000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000ef565b508060049080519060200190620000af929190620000ef565b505050620000e67f37c361355fe19d209ad56c70845a182324206143643350e70e321a367bb5001460001b620000ec60201b60201c565b62000204565b50565b828054620000fd90620001ce565b90600052602060002090601f0160209004810192826200012157600085556200016d565b82601f106200013c57805160ff19168380011785556200016d565b828001600101855582156200016d579182015b828111156200016c5782518255916020019190600101906200014f565b5b5090506200017c919062000180565b5090565b5b808211156200019b57600081600090555060010162000181565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001e757607f821691505b60208210811415620001fe57620001fd6200019f565b5b50919050565b61163280620002146000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610e5a565b60405180910390f35b6100f160048036038101906100ec9190610f15565b61032f565b6040516100fe9190610f70565b60405180910390f35b61010f61034d565b60405161011c9190610f9a565b60405180910390f35b61013f600480360381019061013a9190610fb5565b610357565b60405161014c9190610f70565b60405180910390f35b61015d61044f565b60405161016a9190611024565b60405180910390f35b61018d60048036038101906101889190610f15565b610458565b60405161019a9190610f70565b60405180910390f35b6101bd60048036038101906101b89190610f15565b610504565b005b6101d960048036038101906101d4919061103f565b610596565b6040516101e69190610f9a565b60405180910390f35b6101f76105de565b6040516102049190610e5a565b60405180910390f35b61022760048036038101906102229190610f15565b610670565b6040516102349190610f70565b60405180910390f35b61025760048036038101906102529190610f15565b61075b565b6040516102649190610f70565b60405180910390f35b6102876004803603810190610282919061106c565b610779565b6040516102949190610f9a565b60405180910390f35b6060600380546102ac906110db565b80601f01602080910402602001604051908101604052809291908181526020018280546102d8906110db565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c610800565b8484610808565b6001905092915050565b6000600254905090565b60006103648484846109d3565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af610800565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561042f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104269061117f565b60405180910390fd5b6104438561043b610800565b858403610808565b60019150509392505050565b60006012905090565b60006104fa610465610800565b848460016000610473610800565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104f591906111ce565b610808565b6001905092915050565b6105307f756c52373b48aa62fb7b9b9f6bea7586ce2530b58933aa44773ccae2dbd3604160001b610c54565b61055c7fbad7a828a10410033343ba61e6ad78674ec438c5c0e5febf449e94f4ca0e404560001b610c54565b6105887fdf6192175e9a4ad3a8f0dbcc6db8b5880c13709c62a9a7744496109059b1d08360001b610c54565b6105928282610c57565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105ed906110db565b80601f0160208091040260200160405190810160405280929190818152602001828054610619906110db565b80156106665780601f1061063b57610100808354040283529160200191610666565b820191906000526020600020905b81548152906001019060200180831161064957829003601f168201915b5050505050905090565b6000806001600061067f610800565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073390611296565b60405180910390fd5b610750610747610800565b85858403610808565b600191505092915050565b600061076f610768610800565b84846109d3565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086f90611328565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df906113ba565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109c69190610f9a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a9061144c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa906114de565b60405180910390fd5b610abe838383610db7565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3b90611570565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bd791906111ce565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c3b9190610f9a565b60405180910390a3610c4e848484610dbc565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe906115dc565b60405180910390fd5b610cd360008383610db7565b8060026000828254610ce591906111ce565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d3a91906111ce565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d9f9190610f9a565b60405180910390a3610db360008383610dbc565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dfb578082015181840152602081019050610de0565b83811115610e0a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e2c82610dc1565b610e368185610dcc565b9350610e46818560208601610ddd565b610e4f81610e10565b840191505092915050565b60006020820190508181036000830152610e748184610e21565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eac82610e81565b9050919050565b610ebc81610ea1565b8114610ec757600080fd5b50565b600081359050610ed981610eb3565b92915050565b6000819050919050565b610ef281610edf565b8114610efd57600080fd5b50565b600081359050610f0f81610ee9565b92915050565b60008060408385031215610f2c57610f2b610e7c565b5b6000610f3a85828601610eca565b9250506020610f4b85828601610f00565b9150509250929050565b60008115159050919050565b610f6a81610f55565b82525050565b6000602082019050610f856000830184610f61565b92915050565b610f9481610edf565b82525050565b6000602082019050610faf6000830184610f8b565b92915050565b600080600060608486031215610fce57610fcd610e7c565b5b6000610fdc86828701610eca565b9350506020610fed86828701610eca565b9250506040610ffe86828701610f00565b9150509250925092565b600060ff82169050919050565b61101e81611008565b82525050565b60006020820190506110396000830184611015565b92915050565b60006020828403121561105557611054610e7c565b5b600061106384828501610eca565b91505092915050565b6000806040838503121561108357611082610e7c565b5b600061109185828601610eca565b92505060206110a285828601610eca565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110f357607f821691505b60208210811415611107576111066110ac565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611169602883610dcc565b91506111748261110d565b604082019050919050565b600060208201905081810360008301526111988161115c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111d982610edf565b91506111e483610edf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112195761121861119f565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611280602583610dcc565b915061128b82611224565b604082019050919050565b600060208201905081810360008301526112af81611273565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611312602483610dcc565b915061131d826112b6565b604082019050919050565b6000602082019050818103600083015261134181611305565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006113a4602283610dcc565b91506113af82611348565b604082019050919050565b600060208201905081810360008301526113d381611397565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611436602583610dcc565b9150611441826113da565b604082019050919050565b6000602082019050818103600083015261146581611429565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006114c8602383610dcc565b91506114d38261146c565b604082019050919050565b600060208201905081810360008301526114f7816114bb565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061155a602683610dcc565b9150611565826114fe565b604082019050919050565b600060208201905081810360008301526115898161154d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006115c6601f83610dcc565b91506115d182611590565b602082019050919050565b600060208201905081810360008301526115f5816115b9565b905091905056fea2646970667358221220172ebb09dfd32547f60a8075405f53fceeaec7651f9e0366c83d66cd0c390a4a64736f6c634300080b0033";

type BEP20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BEP20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BEP20__factory extends ContractFactory {
  constructor(...args: BEP20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BEP20";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BEP20> {
    return super.deploy(overrides || {}) as Promise<BEP20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BEP20 {
    return super.attach(address) as BEP20;
  }
  connect(signer: Signer): BEP20__factory {
    return super.connect(signer) as BEP20__factory;
  }
  static readonly contractName: "BEP20";
  public readonly contractName: "BEP20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BEP20Interface {
    return new utils.Interface(_abi) as BEP20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BEP20 {
    return new Contract(address, _abi, signerOrProvider) as BEP20;
  }
}
