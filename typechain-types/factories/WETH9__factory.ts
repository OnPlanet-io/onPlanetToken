/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH9, WETH9Interface } from "../WETH9";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506000908051906020019062000051929190620000d0565b506040518060400160405280600481526020017f5745544800000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f929190620000d0565b506012600260006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b506200017f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200011357805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014357825182559160200191906001019062000126565b5b50905062000153919062000157565b5090565b6200017c91905b80821115620001785760008160009055506001016200015e565b5090565b90565b611671806200018f6000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461029d57806370a08231146102ce57806395d89b4114610333578063a9059cbb146103c3578063d0e30db014610436578063dd62ed3e146104405761009c565b806306fdde03146100a1578063095ea7b31461013157806318160ddd146101a457806323b872dd146101cf5780632e1a7d4d14610262575b600080fd5b3480156100ad57600080fd5b506100b66104c5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013d57600080fd5b5061018a6004803603604081101561015457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610563565b604051808215151515815260200191505060405180910390f35b3480156101b057600080fd5b506101b9610789565b6040518082815260200191505060405180910390f35b3480156101db57600080fd5b50610248600480360360608110156101f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610815565b604051808215151515815260200191505060405180910390f35b34801561026e57600080fd5b5061029b6004803603602081101561028557600080fd5b8101908080359060200190929190505050610fdf565b005b3480156102a957600080fd5b506102b2611338565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102da57600080fd5b5061031d600480360360208110156102f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061134b565b6040518082815260200191505060405180910390f35b34801561033f57600080fd5b50610348611363565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561038857808201518184015260208101905061036d565b50505050905090810190601f1680156103b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cf57600080fd5b5061041c600480360360408110156103e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611401565b604051808215151515815260200191505060405180910390f35b61043e61149a565b005b34801561044c57600080fd5b506104af6004803603604081101561046357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611613565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561055b5780601f106105305761010080835404028352916020019161055b565b820191906000526020600020905b81548152906001019060200180831161053e57829003601f168201915b505050505081565b60006105917ff3b8efbcca10b5ef74a2f0b027716f49f50bad51ceb10056f056188641eefe4160001b611638565b6105bd7fffd3ccdd362972184b5291dc9f21e0329a0e5c56a3de271c8ac89c12d493533760001b611638565b6105e97fbf7506069fa5daecfb5d6577774807041b8946f739eaa38c3392723fbb7d70b960001b611638565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106967f2368e0c9e19f887d88725f0844dc0d1d5740896a556dcc47b18ef5c16a9ab9d860001b611638565b6106c27f40a6be3a664fc80c7134e9bf293472b477e5368594dacb4ec109a6c8e40c4b2160001b611638565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36107537f760e7708a53c924d3b97865d9c3d383f7830e3f31dfa9cbdcaa9a34f18f73ba160001b611638565b61077f7fc7f35640417e721ef4adcaf8d6f748e26d16e62a0c8fffd246419bb1b8c016c360001b611638565b6001905092915050565b60006107b77fdf2751e3924c012d3f581e8bc419d5bcaa784515b16d906995ee15a045d3a98360001b611638565b6107e37f602fe98b17adddc890dea8d16adf57692e9a0b107fcd08351cdcc9ffac169c8a60001b611638565b61080f7f25592c6d8dec72ba9dca5b88d4ee5f6538478a2eaba51db0b7629ce02919c1fc60001b611638565b47905090565b60006108437f495e2b3ff03b6b34602345ed09fb9c291c8d71a3d83b5d83a658d8500b777e6d60001b611638565b61086f7f8aabb0545a4f0e4e6ef62c14dc6679365c5249daf4e91294d98cfed495a9ab6660001b611638565b61089b7f11ea0db9829824dbcb8d62cbed34d87ee67e7faf4364799cf333807cc22b3f9b60001b611638565b6108c77f58f45a9643f09e13c28a2d95fc6091c430d79ef29ed6348528d10af8ee69011660001b611638565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610957576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b6109837fdf02bc009c61f4ade2cfc975def97cc9a838b2b2d3b19188543953120ede47da60001b611638565b6109af7f9c65f3e4140b77e157df4c3f27d8e359baf4efbeb8ddbbbd7407f2950d6b6f4160001b611638565b6109db7f4eb80d06de529f38743da51d0f05de80c752684a2ccd8df358d4581e0af6805c60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610ab357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610d4857610ae47f8ad4234f72fcf13ad9b5e72a4b707d35ec2d2d9fcb720ab1b6e03199d73490d160001b611638565b610b107f9e3b56826ab5e194d9525aa29a96f8944b8da05bdaa04d709dec01ad7c3cae7960001b611638565b610b3c7f37a4864a75a942570a0f56f92eceafcdb1e6509f34a1cab63da271cfacef74a360001b611638565b610b687fea1e89c09bea9624acdbaa25de06593c47678c10867e23e51150ba089e96d1ec60001b611638565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b610c617ffc2750ddf33a10a6cd04413e2c38b14caed2bd14e70f72f73c3e81d638afbaf160001b611638565b610c8d7fb4cd1f07fe8467c7d8965c1bd02726b82e3256edc09d7f84783e146ceb9dc67c60001b611638565b610cb97fb8a878943aa21e87a4e7ed5c27b10541a04051591590786cd5e36866830b5b6b60001b611638565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610d75565b610d747f5d7b79af6e238756fecaad181093d00b757a91c399771bd99f5e37dc5b30126260001b611638565b5b610da17fec6b99dc710efc7cb35553f3321b7e94dd7051808508aa8499e086ba2300025c60001b611638565b610dcd7f83d42cee978535904dd30d1845772763d32963ab638df65f648325d8e48e6dd460001b611638565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610e467f56b06323881bbf608ac949db75b890100a754e0f3a3b3371f036109e8388c0cf60001b611638565b610e727f34062b65cb6c8e302a45a7842c00581a70430f16276029d2732952aed723043f60001b611638565b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550610eeb7f4bd41de1293ecd5906125eb6a49c03e8d8119531bb07873abef2d9954ec0fc2460001b611638565b610f177f75276170d62ba79ffd481ae56864ff24aa968b447940767bf01ec042b1e49afb60001b611638565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3610fa87f2a6864941cca5fdb180b28c13061ed3b31650a2986dd934a942ceea6bf92113e60001b611638565b610fd47f79f65a1cfc5800353983b1ffe91226d1439c0fe56977d47e910b15c3f46c1ad760001b611638565b600190509392505050565b61100b7f55f4edecc70caac531a6fa79b3653236c64a68267663e2514e250eb5da5a47cb60001b611638565b6110377fbdb6bf6c6bc071bc1c535ddd75ccb1338dc0d2ef9c9a395b751cbc1ba30aefbd60001b611638565b6110637f496f50e077ca8f2d1af71146ee416a2b20e681c64c959407e6896a7e7de7813b60001b611638565b61108f7fc40dd8112d8348c88e3722555ee7a37b7751a630b2f29083f51db15cd79e3fc460001b611638565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561111f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b61114b7f37bbf899d75db96536661fb1a99aae934d76a1dce16426768bf14377cc6925ff60001b611638565b6111777fb664b915045f4948d11fa7d75d0f9308052df806169aeaf9dc2009b8cab9dbf360001b611638565b6111a37f07f130cbd61400547d6d0e00f02cf823160128c1f5dc07009e7b702eb4281c4e60001b611638565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061121c7fdb7e7ffd1db1c9f1c2b351046021324f2fc722a694ba051e3a2c84e49c90f14160001b611638565b6112487f5dced15c2794aa085ad214407cab1e8484e031fd416633ced3fbe9af7d032ecb60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561128e573d6000803e3d6000fd5b506112bb7f336eea602d4aacd91cd344bda1b2840557318b42e9c48fcaae35822345527b7e60001b611638565b6112e77fb9a9acb3363e414e78f46a7b5f587dbd51f45f568ef377abf16f1f06877f246c60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113f95780601f106113ce576101008083540402835291602001916113f9565b820191906000526020600020905b8154815290600101906020018083116113dc57829003601f168201915b505050505081565b600061142f7f79ec9d4821068614e284a9ed4a9ddf2b5d6bb2c7b5189bd4b383b7963f30c4d060001b611638565b61145b7fd0fe50640c1fea02d41e26f2c23f175968707f97b56056e276f4667f6f2dfe2c60001b611638565b6114877fb23a55b1dbb15a446d153869592fd015abf8b2d9770e1da5e2c8004538eb71bf60001b611638565b611492338484610815565b905092915050565b6114c67f2da036cc4d4ad5715f23a977839d5bdeb20c8c4c01961604abffab79c44d00aa60001b611638565b6114f27f20eb19f6c8cf11977e2872dbf3c7a22ca92d474cae8f42991287805ff1312a0e60001b611638565b61151e7f0e2b48dce0eee85732d5ff1123d0ce6c74b2458b09dab58dde54e5dfebde250360001b611638565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506115977f9ab98287a1132eb55adc9c99fa8f7224a1325df51d0e044dca8827b4e0305c7b60001b611638565b6115c37f6c4a8bc3f69356d1cd556bf8e079343d82203ba1c7ec886a4d94c5917cce374b60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b6004602052816000526040600020602052806000526040600020600091509150505481565b5056fea264697066735822122095612f02f3eea243990e78036c5755aa1de9a3ef388caea89bc457ff052eb3f664736f6c63430006060033";

type WETH9ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETH9ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH9__factory extends ContractFactory {
  constructor(...args: WETH9ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WETH9";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH9> {
    return super.deploy(overrides || {}) as Promise<WETH9>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH9 {
    return super.attach(address) as WETH9;
  }
  connect(signer: Signer): WETH9__factory {
    return super.connect(signer) as WETH9__factory;
  }
  static readonly contractName: "WETH9";
  public readonly contractName: "WETH9";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETH9Interface {
    return new utils.Interface(_abi) as WETH9Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH9 {
    return new Contract(address, _abi, signerOrProvider) as WETH9;
  }
}
