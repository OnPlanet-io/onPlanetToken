/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH9, WETH9Interface } from "../WETH9";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506000908051906020019062000051929190620000d0565b506040518060400160405280600481526020017f5745544800000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f929190620000d0565b506012600260006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b506200017f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200011357805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014357825182559160200191906001019062000126565b5b50905062000153919062000157565b5090565b6200017c91905b80821115620001785760008160009055506001016200015e565b5090565b90565b611671806200018f6000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461029d57806370a08231146102ce57806395d89b4114610333578063a9059cbb146103c3578063d0e30db014610436578063dd62ed3e146104405761009c565b806306fdde03146100a1578063095ea7b31461013157806318160ddd146101a457806323b872dd146101cf5780632e1a7d4d14610262575b600080fd5b3480156100ad57600080fd5b506100b66104c5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013d57600080fd5b5061018a6004803603604081101561015457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610563565b604051808215151515815260200191505060405180910390f35b3480156101b057600080fd5b506101b9610789565b6040518082815260200191505060405180910390f35b3480156101db57600080fd5b50610248600480360360608110156101f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610815565b604051808215151515815260200191505060405180910390f35b34801561026e57600080fd5b5061029b6004803603602081101561028557600080fd5b8101908080359060200190929190505050610fdf565b005b3480156102a957600080fd5b506102b2611338565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102da57600080fd5b5061031d600480360360208110156102f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061134b565b6040518082815260200191505060405180910390f35b34801561033f57600080fd5b50610348611363565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561038857808201518184015260208101905061036d565b50505050905090810190601f1680156103b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cf57600080fd5b5061041c600480360360408110156103e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611401565b604051808215151515815260200191505060405180910390f35b61043e61149a565b005b34801561044c57600080fd5b506104af6004803603604081101561046357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611613565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561055b5780601f106105305761010080835404028352916020019161055b565b820191906000526020600020905b81548152906001019060200180831161053e57829003601f168201915b505050505081565b60006105917fd95541ae4399515bec550f4acae17461bf439c5730119987d451b8b1991e3ba560001b611638565b6105bd7f8d55ccaab8756c52bb7dd4bfed6f20d74ffc754f4aa811a9d2649304d65a639660001b611638565b6105e97fd3f66bc5dbf65967a91bb274fa45c54ae7629d73f2e40f0a05499faedc6d7f3260001b611638565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106967ffd1370f264db8cfdd20b2aedef048ef0563f262d362cfa7ab2965c92fe9a425760001b611638565b6106c27f94ae495a41590eab24733dde8e009dbaa134da2393f8eb8c7b5fd07509edefd460001b611638565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36107537f9f9cd2d4e325a9f0dd63614b11a8a48c328f3e78793132be4df093318668bb9c60001b611638565b61077f7ff2c0810c35dbd80ad7ceb78d2ba5a6947464ec0650b78c6aca18ec04b56cb22f60001b611638565b6001905092915050565b60006107b77fee79ebeec6a69d9e155628c5adcd56575b374645bfaea41c28d57c97de0d54df60001b611638565b6107e37fc0da181dd71a56738ff5e67d0bab3b886328c1fc5d6d562779cdb5e2ee64ac0560001b611638565b61080f7f86687671e37e59783c65d5d1c46d77c27dec6cd4da41fb4c46ff8f1807c0163460001b611638565b47905090565b60006108437f5430897ac77a18b313074672885a059e5c685b11f9fa2c3240f643cfcc557fa760001b611638565b61086f7fb3c240eb6255ed32913be7bca4d500ad6384844688770b05d0decfec8ba9c33860001b611638565b61089b7f6f98995fea33a1fcab79ab1daa813762baa9b9153bb5d288fc2deed009895ca760001b611638565b6108c77fe4aad09afc7f7125b058bf2069ea95e4c8edbdb374cddeaf39df5363f945848b60001b611638565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610957576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b6109837fc171570d720c487386eaa11cbf974e7d5549da21782718a094fc92b994dcf8ff60001b611638565b6109af7f412a178c4e6c36b0758c0565140278bc38875e01564d63159a6cc3403dcce33e60001b611638565b6109db7ff7a6fa7dd7906c7aafd6dc49c37c699e8d6ef4b02fc34eb8bc2e941827503ec260001b611638565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610ab357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610d4857610ae47f94e8b7cc99c67a5edbe881abf2e7b3809a1ec12180d6cf79c41ab9b4cc16b6ec60001b611638565b610b107f90625d25be98dfda0d1a6ce0ebf97910ed3b1d54e31db9f96d1ca461f72ea99f60001b611638565b610b3c7f82ea4be6b0e294070b8b95688f0c34d53cbafbf32eafa6c788b7c94bfc35d22160001b611638565b610b687f250728ec8b5174cf61d7bc61162cc6dc57fd53ea91031c0d531c716b3b2b241e60001b611638565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b610c617f3c43135a164823d3e57748dcf83cdc37b0fcac871068f830cd219e50a402b62460001b611638565b610c8d7f55f5cf2a1fd63d305ba93ef4bee1ea0e6ed71903ee46ed9e7ce46777e068a5ea60001b611638565b610cb97fc5fb14f91f3d84870037066d1566a89e451f8b5aa051352f3b8ba35930c8fe1a60001b611638565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610d75565b610d747f22c0fbe41ae3c8eb3dbb9c2a31699a1aae775647fb903a697caf0ae1fe1ab7eb60001b611638565b5b610da17f5beaf766bfdd1abc7281189fbc4b75106eb10e9eae48c6d63caee98b9d695b7460001b611638565b610dcd7fa81f859b3b556425e3f51516020ce52bb1bb5d3712a053c0ca424514d1fbcbca60001b611638565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610e467fcc8b22c5373b7753c5ac5e663a1f1c9faba596f783a74b6f26ef45c4c14e1e0f60001b611638565b610e727f36e749e879a1295ffa411a31ea85651249d56a4808e31b8811999d9e993f472c60001b611638565b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550610eeb7f0eb4a6656ed532753257f2bfebf8d77e3cadf5717b4190c82ebacc3332e5ae9760001b611638565b610f177fd5475eec070c517478461b4ae02d5013ac1a0b7a0143c0ac3fb33e1d1dc1079760001b611638565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3610fa87f8c14557a65235d7eb02b272233e88793fd31739fb766f5eb52faaeffb8ce2c0a60001b611638565b610fd47f4421d6d878f539ffd361be521ec23beb9403dac6166086463eb680a676808da960001b611638565b600190509392505050565b61100b7f45a9009fef14a68b1452e748660cf0f1331a524616121609d9afa1be0964d57560001b611638565b6110377fc2e5de64ea031c3386adeb1eb6147b09420ec8db60147426b0063d50f8c6393460001b611638565b6110637f8c1f68f1975310cd68b5bbfd0e30a462685092d9c92e3bd58c27de45ee7824d260001b611638565b61108f7f215c51bb51747c554f23ee4eb2529f36bc4cd9a6fc13b034415f4b1703214f6f60001b611638565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561111f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b61114b7fc558c1a59f564d110f67f03fb8e420d42bab0146716163f1826e50e5b04c811e60001b611638565b6111777fb9dd6ef12c42d36b75932b0f588ff35fcc83a9d29f558f61b03a0c61fd61248460001b611638565b6111a37f4e02da2fc146d2cadbf2061e0ab52df5b4ba6965f47928563960501d19eb6bf360001b611638565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061121c7f68d9f57a061b46f16c08eeac8121e91e2ccde070619bd596c22d34c6ef30bcdf60001b611638565b6112487f8932fbcff9ac11a06a736b8eb231a0bc025295918ec2fdbf7de7e24f8762d64f60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561128e573d6000803e3d6000fd5b506112bb7fc58bb3206fc9456ae6c33f78fdf15176a697d5f585e1dea7994fe491aa583ba060001b611638565b6112e77f9fb57d12c0eeccf5e79339a97d2ac575879fd174edbf5c656e6f4a4eb7ba557c60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113f95780601f106113ce576101008083540402835291602001916113f9565b820191906000526020600020905b8154815290600101906020018083116113dc57829003601f168201915b505050505081565b600061142f7f457da06358e3c4d707a955179fed8c8798045ce4ae7f483d5e3f7e9fde38eaa660001b611638565b61145b7fdbdc3710b231c96caf13d47e6a27bdb353a12f0693851c79759f34017349028a60001b611638565b6114877f29531cb53cdf7ef6cff4b6b62b4b10895810347955ffcaf96b5935a55dc2ed6b60001b611638565b611492338484610815565b905092915050565b6114c67f6f12d1487e3863ebc8c63fceb87376d59a26467c4e08b72a4e73dbbf4842448f60001b611638565b6114f27f1a3e40e445ed1246db198667599333d5c20a99babd7ad4df64257782eaa72ed060001b611638565b61151e7f78578370630218811eb6f1a5a349643546214239308d2c960f02b63bd04dae3260001b611638565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506115977f06ed4ea6746c2b353bec2f27ecf5c099d19dc71fe6de0ad1eb852d00a0b6f43960001b611638565b6115c37f2406221d34074c31f22cce802e7177500565b56d035478552b38e41d9a9f179160001b611638565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b6004602052816000526040600020602052806000526040600020600091509150505481565b5056fea26469706673582212207330a5c66ea47e28f3569514f5e6e39054256cbd4e00b131c1123e1a24209c3c64736f6c63430006060033";

type WETH9ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETH9ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH9__factory extends ContractFactory {
  constructor(...args: WETH9ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WETH9";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH9> {
    return super.deploy(overrides || {}) as Promise<WETH9>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH9 {
    return super.attach(address) as WETH9;
  }
  connect(signer: Signer): WETH9__factory {
    return super.connect(signer) as WETH9__factory;
  }
  static readonly contractName: "WETH9";
  public readonly contractName: "WETH9";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETH9Interface {
    return new utils.Interface(_abi) as WETH9Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH9 {
    return new Contract(address, _abi, signerOrProvider) as WETH9;
  }
}
